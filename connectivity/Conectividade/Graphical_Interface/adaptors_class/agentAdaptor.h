/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp agent.xml -a agentAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef AGENTADAPTOR_H_1450577028
#define AGENTADAPTOR_H_1450577028

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface local.Agent
 */
class AgentAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.signove.health.agent")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.signove.health.agent\">\n"
"    <method name=\"Connected\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"address\"/>\n"
"    </method>\n"
"    <method name=\"Associated\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"xmlData\"/>\n"
"    </method>\n"
"    <method name=\"MeasurementData\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"xmlData\"/>\n"
"    </method>\n"
"    <method name=\"DeviceAttributes\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"xmlData\"/>\n"
"    <\method>\n"
"    <method name =\"Disassociated\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"    </method>\n"
"    <method name=\"Disconnect>\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"device\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    AgentAdaptor(QObject *parent);
    virtual ~AgentAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void Connected(const QString &device, const QString &address);
    void Associated(const QString &device, const QString &xmlData);
    void MeasurementData(const QString &device, const QString &xmlData);
    void DeviceAttributes(QString device, QString xmlData);
    void Disassociated(const QString &device);
    void Disconnected(const QString &device);
Q_SIGNALS: // SIGNALS
};

#endif
